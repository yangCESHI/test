000000000000000
1.	8种基本类型的位数
2.	Switch（）4+2 注解，string
3.	方法重载： 参数的个数，类型，顺序
4.	重载：之类的权限  大于 等于 父类的权限
5.	二维数组： new a[3][]  必须有值
6.	抽象方法：一定要定义在抽象类中。
7.	接口： 方法也是固定的修饰： public abstract 
每个成员变量都是默认使用：public static final 修改。只能显示赋值。因为没有构造方法。
接口的多实现存在安全隐患吗？（多个接口定义的抽象方法，出现 一样重复）
不存在，因为接口中的方法全是抽象，没有主体。
8.	多态中的向下转型：
已经向上转型的子类，可以使用 向下转型 ，再变成子类的引用。就可以调用子类的特有的功能。
注：父类的引用指向子类的对象。
运行，静态方法----------------------父类中的
运行，非静态方法------------------子类中的覆写的方法。

防止出异常:
	一般在强转之前，要做判断。
	If（aa instanceof Dog）{  等等  }
a  i nstanceof  Dog  : a是否输入Dog 这个数据类型。
9.	this.（）构造方法之间进行调用。必须放在构造方法的第一行。
this.(有参/无参)  ，super.(有参/无参)  不可同时存在。子类的所有构造方法中，第一行默认必须是super.()。
10.	 final修饰成员变量时，需要在创建对象之前赋值，否则报错。
11.	Static静态内容是优先于对象存在的，只能访问静态。不能使用this、super，内容属于静态区。
12.	内部类：
内部类可以直接访问外部类的 成员，包括私有。
外部类 必须创建内部类对象，才可访问内部类的成员。
可以是静态成员内部类。调用方便。
注意：局部内部类： 不可直接调用该方法中的局部变量。因为局部变量是根据方法的创建与销毁。可以在该局部变量加上final修饰。即可。
匿名内部类： 
	 后面的重复啦！！！！！杨小二
